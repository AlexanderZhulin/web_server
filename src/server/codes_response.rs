// https://developer.mozilla.org/ru/docs/Web/HTTP/Status
#[derive(Debug, PartialEq)]
pub enum HttpStatus {
    // 1xx: Informational
    Continue,
    SwitchingProtocols,
    Processing,
    EarlyHints,

    // 2xx: Success
    OK,
    Created,
    Accepted,
    NonAuthoritativeInformation,
    NoContent,
    ResetContent,
    PartialContent,
    MultiStatus,
    AlreadyReported,
    IMUsed,

    // 3xx: Redirection
    MultipleChoices,
    MovedPermanently,
    Found,
    SeeOther,
    NotModified,
    UseProxy,
    TemporaryRedirect,
    PermanentRedirect,

    // 4xx: Client Error
    BadRequest,
    Unauthorized,
    PaymentRequired,
    Forbidden,
    NotFound,
    MethodNotAllowed,
    NotAcceptable,
    ProxyAuthenticationRequired,
    RequestTimeout,
    Conflict,
    Gone,
    LengthRequired,
    PreconditionFailed,
    PayloadTooLarge,
    URITooLong,
    UnsupportedMediaType,
    RangeNotSatisfiable,
    ExpectationFailed,
    ImATeapot,
    AuthenticationTimeout,
    MisdirectedRequest,
    UnprocessableEntity,
    Locked,
    FailedDependency,
    TooEarly,
    UpgradeRequired,
    PreconditionRequired,
    TooManyRequests,
    RequestHeaderFieldsTooLarge,
    RetryWith,
    UnavailableForLegalReasons,
    ClientClosedRequest,

    // 5xx: Server Error
    InternalServerError,
    NotImplemented,
    BadGateway,
    ServiceUnavailable,
    GatewayTimeout,
    HTTPVersionNotSupported,
    VariantAlsoNegotiates,
    InsufficientStorage,
    LoopDetected,
    BandwidthLimitExceeded,
    NotExtended,
    NetworkAuthenticationRequired,
    UnknownError,
    WebServerIsDown,
    ConnectionTimedOut,
    OriginIsUnreachable,
    ATimeoutOccurred,
    SSLHandshakeFailed,
    InvalidSSLCertificate,
}

impl HttpStatus {
    pub fn to_code(&self) -> HttpStatusCode {
        match *self {
            HttpStatus::Continue => 100,
            HttpStatus::SwitchingProtocols => 101,
            HttpStatus::Processing => 102,
            HttpStatus::EarlyHints => 103,
            HttpStatus::OK => 200,
            HttpStatus::Created => 201,
            HttpStatus::Accepted => 202,
            HttpStatus::NonAuthoritativeInformation => 203,
            HttpStatus::NoContent => 204,
            HttpStatus::ResetContent => 205,
            HttpStatus::PartialContent => 206,
            HttpStatus::MultiStatus => 207,
            HttpStatus::AlreadyReported => 208,
            HttpStatus::IMUsed => 226,
            HttpStatus::MultipleChoices => 300,
            HttpStatus::MovedPermanently => 301,
            HttpStatus::Found => 302,
            HttpStatus::SeeOther => 303,
            HttpStatus::NotModified => 304,
            HttpStatus::UseProxy => 305,
            HttpStatus::TemporaryRedirect => 307,
            HttpStatus::PermanentRedirect => 308,
            HttpStatus::BadRequest => 400,
            HttpStatus::Unauthorized => 401,
            HttpStatus::PaymentRequired => 402,
            HttpStatus::Forbidden => 403,
            HttpStatus::NotFound => 404,
            HttpStatus::MethodNotAllowed => 405,
            HttpStatus::NotAcceptable => 406,
            HttpStatus::ProxyAuthenticationRequired => 407,
            HttpStatus::RequestTimeout => 408,
            HttpStatus::Conflict => 409,
            HttpStatus::Gone => 410,
            HttpStatus::LengthRequired => 411,
            HttpStatus::PreconditionFailed => 412,
            HttpStatus::PayloadTooLarge => 413,
            HttpStatus::URITooLong => 414,
            HttpStatus::UnsupportedMediaType => 415,
            HttpStatus::RangeNotSatisfiable => 416,
            HttpStatus::ExpectationFailed => 417,
            HttpStatus::ImATeapot => 418,
            HttpStatus::AuthenticationTimeout => 419,
            HttpStatus::MisdirectedRequest => 421,
            HttpStatus::UnprocessableEntity => 422,
            HttpStatus::Locked => 423,
            HttpStatus::FailedDependency => 424,
            HttpStatus::TooEarly => 425,
            HttpStatus::UpgradeRequired => 426,
            HttpStatus::PreconditionRequired => 428,
            HttpStatus::TooManyRequests => 429,
            HttpStatus::RequestHeaderFieldsTooLarge => 431,
            HttpStatus::RetryWith => 449,
            HttpStatus::UnavailableForLegalReasons => 451,
            HttpStatus::ClientClosedRequest => 499,
            HttpStatus::InternalServerError => 500,
            HttpStatus::NotImplemented => 501,
            HttpStatus::BadGateway => 502,
            HttpStatus::ServiceUnavailable => 503,
            HttpStatus::GatewayTimeout => 504,
            HttpStatus::HTTPVersionNotSupported => 505,
            HttpStatus::VariantAlsoNegotiates => 506,
            HttpStatus::InsufficientStorage => 507,
            HttpStatus::LoopDetected => 508,
            HttpStatus::BandwidthLimitExceeded => 509,
            HttpStatus::NotExtended => 510,
            HttpStatus::NetworkAuthenticationRequired => 511,
            HttpStatus::UnknownError => 520,
            HttpStatus::WebServerIsDown => 521,
            HttpStatus::ConnectionTimedOut => 522,
            HttpStatus::OriginIsUnreachable => 523,
            HttpStatus::ATimeoutOccurred => 524,
            HttpStatus::SSLHandshakeFailed => 525,
            HttpStatus::InvalidSSLCertificate => 526,
        }
    }

    pub fn from_code(code: HttpStatusCode) -> Option<HttpStatus> {
        match code {
            100 => Some(HttpStatus::Continue),
            101 => Some(HttpStatus::SwitchingProtocols),
            102 => Some(HttpStatus::Processing),
            103 => Some(HttpStatus::EarlyHints),
            200 => Some(HttpStatus::OK),
            201 => Some(HttpStatus::Created),
            202 => Some(HttpStatus::Accepted),
            203 => Some(HttpStatus::NonAuthoritativeInformation),
            204 => Some(HttpStatus::NoContent),
            205 => Some(HttpStatus::ResetContent),
            206 => Some(HttpStatus::PartialContent),
            207 => Some(HttpStatus::MultiStatus),
            208 => Some(HttpStatus::AlreadyReported),
            226 => Some(HttpStatus::IMUsed),
            300 => Some(HttpStatus::MultipleChoices),
            301 => Some(HttpStatus::MovedPermanently),
            302 => Some(HttpStatus::Found),
            303 => Some(HttpStatus::SeeOther),
            304 => Some(HttpStatus::NotModified),
            305 => Some(HttpStatus::UseProxy),
            307 => Some(HttpStatus::TemporaryRedirect),
            308 => Some(HttpStatus::PermanentRedirect),
            400 => Some(HttpStatus::BadRequest),
            401 => Some(HttpStatus::Unauthorized),
            402 => Some(HttpStatus::PaymentRequired),
            403 => Some(HttpStatus::Forbidden),
            404 => Some(HttpStatus::NotFound),
            405 => Some(HttpStatus::MethodNotAllowed),
            406 => Some(HttpStatus::NotAcceptable),
            407 => Some(HttpStatus::ProxyAuthenticationRequired),
            408 => Some(HttpStatus::RequestTimeout),
            409 => Some(HttpStatus::Conflict),
            410 => Some(HttpStatus::Gone),
            411 => Some(HttpStatus::LengthRequired),
            412 => Some(HttpStatus::PreconditionFailed),
            413 => Some(HttpStatus::PayloadTooLarge),
            414 => Some(HttpStatus::URITooLong),
            415 => Some(HttpStatus::UnsupportedMediaType),
            416 => Some(HttpStatus::RangeNotSatisfiable),
            417 => Some(HttpStatus::ExpectationFailed),
            418 => Some(HttpStatus::ImATeapot),
            419 => Some(HttpStatus::AuthenticationTimeout),
            421 => Some(HttpStatus::MisdirectedRequest),
            422 => Some(HttpStatus::UnprocessableEntity),
            423 => Some(HttpStatus::Locked),
            424 => Some(HttpStatus::FailedDependency),
            425 => Some(HttpStatus::TooEarly),
            426 => Some(HttpStatus::UpgradeRequired),
            428 => Some(HttpStatus::PreconditionRequired),
            429 => Some(HttpStatus::TooManyRequests),
            431 => Some(HttpStatus::RequestHeaderFieldsTooLarge),
            449 => Some(HttpStatus::RetryWith),
            451 => Some(HttpStatus::UnavailableForLegalReasons),
            499 => Some(HttpStatus::ClientClosedRequest),
            500 => Some(HttpStatus::InternalServerError),
            501 => Some(HttpStatus::NotImplemented),
            502 => Some(HttpStatus::BadGateway),
            503 => Some(HttpStatus::ServiceUnavailable),
            504 => Some(HttpStatus::GatewayTimeout),
            505 => Some(HttpStatus::HTTPVersionNotSupported),
            506 => Some(HttpStatus::VariantAlsoNegotiates),
            507 => Some(HttpStatus::InsufficientStorage),
            508 => Some(HttpStatus::LoopDetected),
            509 => Some(HttpStatus::BandwidthLimitExceeded),
            510 => Some(HttpStatus::NotExtended),
            511 => Some(HttpStatus::NetworkAuthenticationRequired),
            520 => Some(HttpStatus::UnknownError),
            521 => Some(HttpStatus::WebServerIsDown),
            522 => Some(HttpStatus::ConnectionTimedOut),
            523 => Some(HttpStatus::OriginIsUnreachable),
            524 => Some(HttpStatus::ATimeoutOccurred),
            525 => Some(HttpStatus::SSLHandshakeFailed),
            526 => Some(HttpStatus::InvalidSSLCertificate),
            _ => None,
        }
    }
}